using GamestatsBase;
using Microsoft.AspNetCore.Mvc;
using System.Text;

namespace SampleCore.Controllers;

[Route("pokedngnwii/web")]
[ApiController]
[GamestatsConfig("zjzrhOVXZKLHNspYpGoR0001c7850000620b0000000820556356pokedngnwii", GamestatsRequestVersions.Version2, GamestatsResponseVersions.Version2, encryptedRequest: true, requireSession: true)]
public class PokedngnwiiController : ControllerBase
{
    [HttpGet("common/setProfile.asp")]
    public IActionResult SetProfile()
    {
        Response.Body.Write([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);
        return Ok();
    }

    [HttpGet("rescue/rescueCheck.asp")]
    public IActionResult RescueCheck()
    {
        // replay response from Receiving a Random A-OK Mail And Sending a Random Thank You Mail.pcapng
        // request data:
        // 0000: 8b9ca41c0c000000 1ca49c8b00000000
        // 0010: 0001b14b
        // note: the request data seems to share its format with rescueEntry

        Response.Body.Write([
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64,
                0xa9, 0x9f, 0x50, 0x07, 0x99, 0xcc, 0x61, 0xab,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0xce, 0x6a, 0x33, 0x0a, 0x15, 0x85, 0x89, 0x88,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0xdd, 0x30, 0xb1, 0x30, 0xe2, 0x30, 0xf3, 0x30,
                0xba, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x63, 0x81, 0x0d, 0x30, 0x0b, 0x00, 0x20, 0x00,
                0x16, 0x30, 0x32, 0x18, 0x18, 0x0e, 0x1f, 0x00,
                0x18, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x4a, 0x13, 0x40, 0x65,
                0x03, 0x28, 0x5e, 0x00, 0x00, 0x00, 0x20, 0x1c,
                0x46, 0x1d, 0x86, 0x1f, 0xe6, 0x1a, 0x06, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x40, 0x24, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
                0x30, 0x6f, 0x30, 0x4c, 0x30, 0x82, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x30, 0x82, 0x30, 0x4c,
                0x30, 0x6f, 0x30, 0x88, 0x30, 0x8d, 0x30, 0x57,
                0x30, 0x4f, 0x30, 0x4d, 0x30, 0x85, 0x30, 0x46,
                0x30, 0x58, 0x30, 0x87, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x63, 0x62, 0x31, 0x64,
                0x30, 0x31, 0x31, 0x38, 0x61, 0x38, 0x63, 0x34,
                0x31, 0x35, 0x65, 0x30, 0x31, 0x34, 0x64, 0x38,
                0x62, 0x37, 0x35, 0x66, 0x32, 0x33, 0x38, 0x38,
                0x32, 0x66, 0x37, 0x33, 0x31, 0x31, 0x63, 0x33,
                0x32, 0x30, 0x31, 0x39 ]);

        return Ok();
    }

    [HttpGet("rescue/rescueComplete.asp")]
    public IActionResult RescueComplete()
    {
        // replay response from A-OK Mission.pcapng
        // request data:
        // 0000: 8b9ca41cd4000000 1ca49c8b00000000
        // 0010: 0001b14ace6a330a 41f73da200000000
        // 0020: 0000000000000000 0000000000490000
        // 0030: 0000000000000000 0000000000000000
        // 0040: 0000000000000000 0000000000000000
        // 0050: 0000000000000000 0000000000000000
        // 0060: 0000000000000000 0000000000000000
        // 0070: 306f306f306f306f 306f306f306f304c
        // 0080: 304c304c304c304c 304c304c30823082
        // 0090: 30823082306f306f 306f306f306f306f
        // 00a0: 306f306f304c304c 304c304c304c304c
        // 00b0: 304c304c30823082 3082308230823082
        // 00c0: 30823082304c304c 304c304c304c304c
        // 00d0: 304c304c306f306f 306f306f

        Response.Body.Write([ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                              0x00, 0x00, 0x00, 0x00 ]);

        return Ok();
    }

    [HttpGet("rescue/rescueEntry.asp")]
    public IActionResult RescueEntry()
    {
        // replay response from Random Mission.pcapng
        // request data:
        // 0000: 8b9ca41c0c000000 1ca49c8b00000000
        // 0010: 0001b14a

        Response.Body.Write([
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                0xa9, 0x9f, 0x50, 0x07, 0x3e, 0x86, 0xf3, 0x55,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0xdd, 0x30, 0xb1, 0x30, 0xe2, 0x30, 0xf3, 0x30,
                0xba, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44,
                0x00, 0x00, 0x00, 0x01, 0x00, 0x5b, 0x64, 0x87,
                0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ]);

        return Ok();
    }

    [HttpGet("rescue/rescueExist.asp")]
    public IActionResult RescueExist()
    {
        if (false)
        {
            // replay response from Invalid Code for Rescue Mission.pcapng
            // request data:
            // 0000: 8b9ca41c0c000000 1ca49c8b00000000
            // 0010: 0001b197
            // note: 1b197 corresponds to the inputted rescue ID of 110999 in big endian.

            Response.Body.Write([0x00, 0x00, 0x00, 0x0a]);

            StreamWriter sw = new StreamWriter(Response.Body, Encoding.UTF8);
            sw.Write(":(unknown error:'pokemonSwarm' is null or not an object.");
            sw.Flush();
        }
        else
        {
            // replay response from CodeNotWorking.pcapng
            // request data:
            // 0000: 8b9ca41c0c000000 1ca49c8b00000000
            // 0010: 0001b142

            Response.Body.Write([
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                    0xa9, 0x9f, 0x50, 0x07, 0xed, 0xa4, 0x96, 0xf7,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0xdd, 0x30, 0xb1, 0x30, 0xe2, 0x30, 0xf3, 0x30,
                    0xba, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45,
                    0x00, 0x00, 0x00, 0x02, 0x00, 0x0d, 0x48, 0xa0,
                    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
                    0x30, 0x4c, 0x30, 0x82, 0x30, 0x6f, 0x30, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x6f,
                    0x30, 0x4c, 0x30, 0x00, 0x30, 0x6f, 0x30, 0x6f,
                    0x30, 0x82, 0x30, 0x4c, 0x30, 0x82, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ]);
        }

        return Ok();
    }

    [HttpGet("rescue/rescueList.asp")]
    public IActionResult RescueList()
    {
        // replay response from Random Mission.pcapng
        // request data:
        // 0000: 8b9ca41c20000000 1ca49c8b00000000
        // 0010: 000000180000000c 0000000600000000
        // 0020: 0000002000000001

        // request: a bunch of 32-bit BE ints
        // pid, 0, 24, 12, 6, 0, 2, 1
        // response:
        // at offset 0x2c, we see the request player name (? pink text)
        // in unicode katakana: pokemonzu

        // this dummy response will tell the game there is no Rescue Mail.
        Response.Body.Write(
        [
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ]);

        /*
        response.Write(new byte[] {
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0xb1, 0x4a, 0xa9, 0x9f, 0x50, 0x07,
            0x3e, 0x86, 0xf3, 0x55, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xdd, 0x30, 0xb1, 0x30,
            0xe2, 0x30, 0xf3, 0x30, 0xba, 0x30, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x5b, 0x64, 0x87, 0x00, 0x00, 0x00, 0x02,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00 },
            0, 204);
        */

        return Ok();
    }

    [HttpGet("rescue/rescueRecieve.asp")]
    public IActionResult RescueRecieve()
    {
        // replay response from Random Mission.pcapng
        // request data:
        // 0000: 8b9ca41c0c000000 1ca49c8b00000000
        // 0010: 0001b14f
        // note: the request data seems to share its format with rescueEntry

        Response.Body.Write([
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                0xa9, 0x9f, 0x50, 0x07, 0xe3, 0x53, 0x95, 0xf5,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x7a, 0x00, 0x00, 0xff, 0x34, 0xff, 0x39,
                0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
                0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
                0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
                0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x32, 0x64, 0x63, 0x66, 0x39, 0x61, 0x35, 0x35,
                0x66, 0x63, 0x38, 0x32, 0x32, 0x33, 0x61, 0x32,
                0x30, 0x30, 0x33, 0x63, 0x65, 0x39, 0x61, 0x39,
                0x36, 0x38, 0x38, 0x64, 0x32, 0x33, 0x32, 0x64,
                0x66, 0x65, 0x38, 0x33, 0x32, 0x38, 0x38, 0x64 ]);

        return Ok();
    }

    [HttpGet("rescue/rescueRegist.asp")]
    public IActionResult RescueRegist()
    {
        // replay response from Sending Friend Mission Request.pcapng
        // request data:
        // 0000: 8b9ca41cac000000 1ca49c8bce6a330a
        // 0010: 24b4a64800000000 0000000000000000
        // 0020: 0000000000000044 0000000100b3979b
        // 0030: 0000000100000000 0000000000000000
        // 0040: 0000000000000000 0000000000000000
        // 0050: 0000000000000000 0000000000000000
        // 0060: 0000000000000000 0000000000000000
        // 0070: 0000000000000000 0000000000000000
        // 0080: 0000000000000000 0000000000000000
        // 0090: 0000000000000000 0000000000000000
        // 00a0: 0000000000000000 0000000000000000
        // 00b0: 00000000

        // request 0000-0007: gamestats boilerplate, pid and blob length
        // 0008-000b: pid in big endian

        // request is a rescue mail payload, response is the ID it has been uploaded with in big endian
        // the below response corresponds to 0000-0011-0926

        Response.Body.Write([
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x01, 0xb1, 0x4e ]);

        return Ok();
    }

    [HttpGet("rescue/rescueThanks.asp")]
    public IActionResult RescueThanks()
    {
        // replay response from Receiving a Random A-OK Mail And Sending a Random Thank You Mail.pcapng
        // request data:
        // 0000: 8b9ca41c7c000000 1ca49c8b00000000
        // 0010: 0001b14b0007000a 306f306e3067306e
        // 0020: 30673092306e306b 0000000000000000
        // 0030: 0000000000000000 0000000030923092
        // 0040: 3092309230923092 3092309230923092
        // 0050: 3092309230923092 3092309230923092
        // 0060: 3092309230923092 3092309230923092
        // 0070: 3092309230923092 3092309230923092
        // 0080: 30923092

        Response.Body.Write([0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);

        return Ok();
    }
}
